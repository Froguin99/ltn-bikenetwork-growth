# PARAMETERS
ltn_plausiablity_score: 52.5 # this is the value for desiding how "strict" we are will classifying LTNs. a value of 0 would be every neighbourhood
lower_ltn_plausiablity_score: 40 # for the many ltn scenarios
# and a value of 100 would be 0 neighbourhoods and a value of 0 would be every neighbourhood.
# around 50-55 is a good value to start with, as from prioir analysis this is a realistic indicator of it being a true LTN zone. 

scenarios:
 - "no_ltn_scenario"
 - "current_ltn_scenario"
 - "more_ltn_scenario" # The scenarios to run

# These are values to loop through for different runs
poi_source: "LTNs_tessellation" #"LTNs_tessellation" # railwaystation, grid, neighbourhoods, tessellation, mixed
prune_measure: "betweenness" # betweenness, closeness, random
weighting: True # True, False
methods_plotting: False # choose if we show the methods in plots as the code runs
export: True # chose to export geopackages mid-way through running, for use in QGIS etc.
prune_measures:
 - "betweenness"
 - "random"
 - "pct"

SERVER: False # Whether the code runs on the server (important to avoid parallel job conflicts)


# SEMI-CONSTANTS
# These values should not be changed, unless the analysis shows we need to

smallcitythreshold: 46 # cities smaller or equal than this rank in the city list will be treated as "small" and get full calculations
prune_measures:
    "betweenness": "Bq"
    "closeness": "Cq"
    "random": "Rq"
prune_quantiles: [x/40 for x in list(range(1, 41))] # The quantiles where the GT should be pruned using the prune_measure
networktypes: 
 - "biketrack"
 - "carall"
 - "bikeable"
 - "biketrackcarall"
 - "biketrack_onstreet"
 - "bikeable_offstreet" # Existing infrastructures to analyze

# 03
gridl: 1707 # in m, for generating the grid
# https://en.wikipedia.org/wiki/Right_triangle#Circumcircle_and_incircle
# 2*0.5 = a+a-sqrt(2)a   |   1 = a(2-sqrt2)   |   a = 1/(2-sqrt2) = 1.707
# This leads to a full 500m coverage when a (worst-case) square is being triangulated
bearingbins: 72 # number of bins to determine bearing. e.g. 72 will create 5 degrees bins

poiparameters:
    "railwaystation":
        "railway":
         - 'station'
         - 'halt'
# should maybe also add: ["railway"!~"entrance"], but afaik osmnx is not capable of this: https://osmnx.readthedocs.io/en/stable/osmnx.html?highlight=geometries_from_polygon#osmnx.geometries.geometries_from_polygon
#"busstop":{'highway':'bus_stop'}
              
# 05
buffer_walk: 500 # Buffer in m for coverage calculations. (How far people are willing to walk)
numnodepairs: 500 # Number of node pairs to consider for random sample to calculate directness (O(numnodepairs^2), so better not go over 1000)
#os.environ["NOMIS_API_KEY"] = "" # put your NOMIS API key here. See more at https://github.com/virgesmith/UKCensusAPI/tree/main
# https://www.nomisweb.co.uk/api/v01/help			

#06
nodesize_grown: 7.5

constricted_parameternamemap:
    "betweenness": "_metrics"
    "grid": ""
    "railwaystation": "_rail"

constricted_plotinfo:
    "title":
     - "Global Efficiency"
     - "Local Efficiency"
     - "Directness of LCC"
     - "Spatial Clustering"
     - "Anisotropy"

analysis_existing_rowkeys:
    "bikeable": 0
    "bikeable_offstreet": 1
    "biketrack": 2
    "biketrack_onstreet": 3
    "biketrackcarall": 4
    "carall": 5

#03
snapthreshold: 300 # in m, tolerance for snapping POIs to network
# 300 m works well for zoom resolution 8 on tesselation (points never leave their hexagons)